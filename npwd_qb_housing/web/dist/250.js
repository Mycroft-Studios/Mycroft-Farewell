"use strict";(self.webpackChunknpwd_qb_housing=self.webpackChunknpwd_qb_housing||[]).push([[250],{4121:(e,n,t)=>{t.d(n,{K:()=>l});var r=t(2950),a=t.n(r),o=t(6638),l=function(){return a().createElement(o.Z,{fontSize:"large"})}},9250:(e,n,t)=>{t.r(n),t.d(n,{externalAppConfig:()=>l,default:()=>c});var r=t(4023),a=t(4121),o=t(4274),l=function(){return{id:"housing",nameLocale:"Properties",color:"#fff",backgroundColor:o.Gy,path:"/housing",icon:a.K,app:r.Z,theme:o.rS}};const c=l},4023:(e,n,t)=>{t.d(n,{Z:()=>j});var r=t(2950),a=t.n(r),o=t(5475),l=t(3839),c=t.n(l),i=t(4810),u=t(1807),f=t(5137),m=t(1551),d=t(4714),s=t(602),h=t(9275),p=t(6235),g=t(4362),E=t(4582),Z=t(653),b=t(352),x=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},k=function(){return k=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},k.apply(this,arguments)},v=c().div(O||(O=x(["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"],["\n  flex: 1;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n  background-color: #fafafa;\n  ","\n"])),(function(e){return e.isDarkMode&&"\n    background-color: #121212;\n  "})),y=c().footer(P||(P=x(["\n  margin-top: auto;\n"],["\n  margin-top: auto;\n"]))),w=function(e){var n="dark"===e.theme.palette.mode;return a().createElement(s.Z,null,a().createElement(i.Z,{injectFirst:!0},a().createElement(u.Z,{theme:e.theme},a().createElement(d.v,null),a().createElement(v,{isDarkMode:n},a().createElement(m.Z,null),a().createElement(p.Switch,null,a().createElement(p.Route,{exact:!0,path:"/housing"},a().createElement(g.Z,{isDarkMode:n})),a().createElement(p.Route,{exact:!0,path:"/housing/keys"},a().createElement(E.Z,{isDarkMode:n}))),a().createElement(Z.Z,null),a().createElement(b.Z,null),a().createElement(y,null,a().createElement(h.Z,null))))))};const j=function(e){return a().createElement(o.NuiProvider,null,a().createElement(f.RecoilRoot,null,a().createElement(w,k({},e))))};var O,P},4274:(e,n,t)=>{t.d(n,{Gy:()=>o,cX:()=>l,rS:()=>c});var r=t(7095),a=t(6115),o=r.Z[500],l=a.Z.white,c={palette:{primary:{main:o,dark:r.Z[900],light:r.Z[500],contrastText:l},secondary:{main:r.Z[500],dark:r.Z[900],light:r.Z[500],contrastText:l}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUwLmpzIiwibWFwcGluZ3MiOiJtS0FFV0EsRUFBWSxXQUNuQixPQUFPLGtCQUFvQixJQUFVLENBQUVDLFNBQVUsWSx1R0NBMUNDLEVBQW9CLFdBQWMsTUFBTyxDQUNoREMsR0FBSSxVQUNKQyxXQUFZLGFBQ1pDLE1BQU8sT0FDUEMsZ0JBQWlCLEtBQ2pCQyxLQUFNLFdBQ05DLEtBQU0sSUFDTkMsSUFBSyxJQUNMQyxNQUFPLE9BRVgsVyx5TUNiSUMsRUFBOEQsU0FBVUMsRUFBUUMsR0FFaEYsT0FESUMsT0FBT0MsZUFBa0JELE9BQU9DLGVBQWVILEVBQVEsTUFBTyxDQUFFSSxNQUFPSCxJQUFpQkQsRUFBT0MsSUFBTUEsRUFDbEdELEdBRVBLLEVBQXNDLFdBU3RDLE9BUkFBLEVBQVdILE9BQU9JLFFBQVUsU0FBU0MsR0FDakMsSUFBSyxJQUFJQyxFQUFHQyxFQUFJLEVBQUdDLEVBQUlDLFVBQVVDLE9BQVFILEVBQUlDLEVBQUdELElBRTVDLElBQUssSUFBSUksS0FEVEwsRUFBSUcsVUFBVUYsR0FDT1AsT0FBT1ksVUFBVUMsZUFBZUMsS0FBS1IsRUFBR0ssS0FDekROLEVBQUVNLEdBQUtMLEVBQUVLLElBRWpCLE9BQU9OLEdBRUpGLEVBQVNZLE1BQU1DLEtBQU1QLFlBZ0I1QlEsRUFBWSxRQUFXQyxJQUFxQkEsRUFBbUJyQixFQUFxQixDQUFDLGlLQUFrSyxNQUFPLENBQUMsaUtBQWtLLFNBQVMsU0FBVXNCLEdBRXBiLE9BRGlCQSxFQUFHQyxZQUVoQiwwQ0FFSkMsRUFBUyxXQUFjQyxJQUFxQkEsRUFBbUJ6QixFQUFxQixDQUFDLDJCQUE0QixDQUFDLDhCQUNsSDBCLEVBQU0sU0FBVUMsR0FDaEIsSUFBSUosRUFBMEMsU0FBN0JJLEVBQU01QixNQUFNNkIsUUFBUUMsS0FDckMsT0FBUSxrQkFBb0IsSUFBa0IsS0FDMUMsa0JBQW9CLElBQXNCLENBQUVDLGFBQWEsR0FDckQsa0JBQW9CLElBQWUsQ0FBRS9CLE1BQU80QixFQUFNNUIsT0FDOUMsa0JBQW9CLElBQWUsTUFDbkMsa0JBQW9CcUIsRUFBVyxDQUFFRyxXQUFZQSxHQUN6QyxrQkFBb0IsSUFBUSxNQUM1QixrQkFBb0IsRUFBQVEsT0FBUSxLQUN4QixrQkFBb0IsRUFBQUMsTUFBTyxDQUFFQyxPQUFPLEVBQU1yQyxLQUFNLFlBQzVDLGtCQUFvQixJQUFXLENBQUUyQixXQUFZQSxLQUNqRCxrQkFBb0IsRUFBQVMsTUFBTyxDQUFFQyxPQUFPLEVBQU1yQyxLQUFNLGlCQUM1QyxrQkFBb0IsSUFBUyxDQUFFMkIsV0FBWUEsTUFDbkQsa0JBQW9CLElBQU8sTUFDM0Isa0JBQW9CLElBQWlCLE1BQ3JDLGtCQUFvQkMsRUFBUSxLQUN4QixrQkFBb0IsSUFBZSxZQUszRCxRQUhvQixTQUFVRyxHQUFTLE9BQVEsa0JBQW9CLEVBQUFPLFlBQWEsS0FDNUUsa0JBQW9CLEVBQUFDLFdBQVksS0FDNUIsa0JBQW9CVCxFQUFLcEIsRUFBUyxHQUFJcUIsT0FFOUMsSUFBSU4sRUFBa0JJLEcsMkVDeERYVyxFQUEwQixTQUMxQkMsRUFBdUIsVUFDdkJ0QyxFQUFRLENBQ2Y2QixRQUFTLENBQ0xVLFFBQVMsQ0FDTEMsS0FBTUgsRUFDTkksS0FBTSxTQUNOQyxNQUFPLFNBQ1BDLGFBQWNMLEdBRWxCTSxVQUFXLENBQ1BKLEtBQU0sU0FDTkMsS0FBTSxTQUNOQyxNQUFPLFNBQ1BDLGFBQWNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vaWNvbi50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vbnB3ZC5jb25maWcudHMiLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL0FwcC50c3giLCJ3ZWJwYWNrOi8vbnB3ZF9xYl9ob3VzaW5nLy4vc3JjL2FwcC50aGVtZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgSG9tZUljb24gZnJvbSAnQG11aS9pY29ucy1tYXRlcmlhbC9Ib21lJztcclxuZXhwb3J0IHZhciBIb3VzZUljb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChIb21lSWNvbiwgeyBmb250U2l6ZTogXCJsYXJnZVwiIH0pO1xyXG59O1xyXG4iLCJpbXBvcnQgQXBwIGZyb20gJy4vc3JjL0FwcCc7XHJcbmltcG9ydCB7IEhvdXNlSWNvbiB9IGZyb20gJy4vaWNvbic7XHJcbmltcG9ydCB7IHRoZW1lLCBIT1VTRV9BUFBfUFJJTUFSWV9DT0xPUiB9IGZyb20gJy4vc3JjL2FwcC50aGVtZSc7XHJcbmV4cG9ydCB2YXIgZXh0ZXJuYWxBcHBDb25maWcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAoe1xyXG4gICAgaWQ6ICdob3VzaW5nJyxcclxuICAgIG5hbWVMb2NhbGU6ICdQcm9wZXJ0aWVzJyxcclxuICAgIGNvbG9yOiAnI2ZmZicsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IEhPVVNFX0FQUF9QUklNQVJZX0NPTE9SLFxyXG4gICAgcGF0aDogJy9ob3VzaW5nJyxcclxuICAgIGljb246IEhvdXNlSWNvbixcclxuICAgIGFwcDogQXBwLFxyXG4gICAgdGhlbWU6IHRoZW1lLFxyXG59KTsgfTtcclxuZXhwb3J0IGRlZmF1bHQgZXh0ZXJuYWxBcHBDb25maWc7XHJcbiIsInZhciBfX21ha2VUZW1wbGF0ZU9iamVjdCA9ICh0aGlzICYmIHRoaXMuX19tYWtlVGVtcGxhdGVPYmplY3QpIHx8IGZ1bmN0aW9uIChjb29rZWQsIHJhdykge1xyXG4gICAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29va2VkLCBcInJhd1wiLCB7IHZhbHVlOiByYXcgfSk7IH0gZWxzZSB7IGNvb2tlZC5yYXcgPSByYXc7IH1cclxuICAgIHJldHVybiBjb29rZWQ7XHJcbn07XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTnVpUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1maXZlbS1ob29rcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBTdHlsZWRFbmdpbmVQcm92aWRlciwgVGhlbWVQcm92aWRlciB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwnO1xyXG5pbXBvcnQgeyBSZWNvaWxSb290IH0gZnJvbSAncmVjb2lsJztcclxuaW1wb3J0IEhlYWRlciBmcm9tICcuL2NvbXBvbmVudHMvSGVhZGVyJztcclxuaW1wb3J0IHsgUGhvbmVTbmFja2JhciB9IGZyb20gJy4vc25hY2tiYXIvUGhvbmVTbmFja2Jhcic7XHJcbmltcG9ydCBTbmFja2JhclByb3ZpZGVyIGZyb20gJy4vc25hY2tiYXIvU25hY2tiYXJQcm92aWRlcic7XHJcbmltcG9ydCBIb3VzaW5nTmF2QmFyIGZyb20gJy4vY29tcG9uZW50cy9Ib3VzaW5nTmF2QmFyJztcclxuaW1wb3J0IHsgU3dpdGNoLCBSb3V0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5pbXBvcnQgSG91c2VMaXN0IGZyb20gJy4vY29tcG9uZW50cy9Ib3VzZUxpc3QvSG91c2VMaXN0JztcclxuaW1wb3J0IEtleUxpc3QgZnJvbSAnLi9jb21wb25lbnRzL0tleUxpc3QvS2V5TGlzdCc7XHJcbmltcG9ydCBNb2RhbCBmcm9tICcuL2NvbXBvbmVudHMvSG91c2VMaXN0L21vZGFsL01vZGFsJztcclxuaW1wb3J0IE1vZGFsQmFja2dyb3VuZCBmcm9tICcuL2NvbXBvbmVudHMvSG91c2VMaXN0L21vZGFsL01vZGFsQmFja2dyb3VuZCc7XHJcbnZhciBDb250YWluZXIgPSBzdHlsZWQuZGl2KHRlbXBsYXRlT2JqZWN0XzEgfHwgKHRlbXBsYXRlT2JqZWN0XzEgPSBfX21ha2VUZW1wbGF0ZU9iamVjdChbXCJcXG4gIGZsZXg6IDE7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBvdmVyZmxvdzogYXV0bztcXG4gIG1heC1oZWlnaHQ6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xcbiAgXCIsIFwiXFxuXCJdLCBbXCJcXG4gIGZsZXg6IDE7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBvdmVyZmxvdzogYXV0bztcXG4gIG1heC1oZWlnaHQ6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xcbiAgXCIsIFwiXFxuXCJdKSksIGZ1bmN0aW9uIChfYSkge1xyXG4gICAgdmFyIGlzRGFya01vZGUgPSBfYS5pc0RhcmtNb2RlO1xyXG4gICAgcmV0dXJuIGlzRGFya01vZGUgJiZcclxuICAgICAgICBcIlxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjEyO1xcbiAgXCI7XHJcbn0pO1xyXG52YXIgRm9vdGVyID0gc3R5bGVkLmZvb3Rlcih0ZW1wbGF0ZU9iamVjdF8yIHx8ICh0ZW1wbGF0ZU9iamVjdF8yID0gX19tYWtlVGVtcGxhdGVPYmplY3QoW1wiXFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcblwiXSwgW1wiXFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcblwiXSkpKTtcclxudmFyIEFwcCA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgdmFyIGlzRGFya01vZGUgPSBwcm9wcy50aGVtZS5wYWxldHRlLm1vZGUgPT09ICdkYXJrJztcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChTbmFja2JhclByb3ZpZGVyLCBudWxsLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3R5bGVkRW5naW5lUHJvdmlkZXIsIHsgaW5qZWN0Rmlyc3Q6IHRydWUgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUaGVtZVByb3ZpZGVyLCB7IHRoZW1lOiBwcm9wcy50aGVtZSB9LFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChQaG9uZVNuYWNrYmFyLCBudWxsKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGlzRGFya01vZGU6IGlzRGFya01vZGUgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEhlYWRlciwgbnVsbCksXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChTd2l0Y2gsIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6IFwiL2hvdXNpbmdcIiB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChIb3VzZUxpc3QsIHsgaXNEYXJrTW9kZTogaXNEYXJrTW9kZSB9KSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgZXhhY3Q6IHRydWUsIHBhdGg6IFwiL2hvdXNpbmcva2V5c1wiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEtleUxpc3QsIHsgaXNEYXJrTW9kZTogaXNEYXJrTW9kZSB9KSkpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWwsIG51bGwpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxCYWNrZ3JvdW5kLCBudWxsKSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEZvb3RlciwgbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChIb3VzaW5nTmF2QmFyLCBudWxsKSkpKSkpKTtcclxufTtcclxudmFyIFdpdGhQcm92aWRlcnMgPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KE51aVByb3ZpZGVyLCBudWxsLFxyXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChSZWNvaWxSb290LCBudWxsLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQXBwLCBfX2Fzc2lnbih7fSwgcHJvcHMpKSkpKTsgfTtcclxuZXhwb3J0IGRlZmF1bHQgV2l0aFByb3ZpZGVycztcclxudmFyIHRlbXBsYXRlT2JqZWN0XzEsIHRlbXBsYXRlT2JqZWN0XzI7XHJcbiIsImltcG9ydCB7IGNvbW1vbiwgY3lhbiB9IGZyb20gJ0BtdWkvbWF0ZXJpYWwvY29sb3JzJztcclxuZXhwb3J0IHZhciBIT1VTRV9BUFBfUFJJTUFSWV9DT0xPUiA9IGN5YW5bNTAwXTtcclxuZXhwb3J0IHZhciBIT1VTRV9BUFBfVEVYVF9DT0xPUiA9IGNvbW1vbi53aGl0ZTtcclxuZXhwb3J0IHZhciB0aGVtZSA9IHtcclxuICAgIHBhbGV0dGU6IHtcclxuICAgICAgICBwcmltYXJ5OiB7XHJcbiAgICAgICAgICAgIG1haW46IEhPVVNFX0FQUF9QUklNQVJZX0NPTE9SLFxyXG4gICAgICAgICAgICBkYXJrOiBjeWFuWzkwMF0sXHJcbiAgICAgICAgICAgIGxpZ2h0OiBjeWFuWzUwMF0sXHJcbiAgICAgICAgICAgIGNvbnRyYXN0VGV4dDogSE9VU0VfQVBQX1RFWFRfQ09MT1IsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZWNvbmRhcnk6IHtcclxuICAgICAgICAgICAgbWFpbjogY3lhbls1MDBdLFxyXG4gICAgICAgICAgICBkYXJrOiBjeWFuWzkwMF0sXHJcbiAgICAgICAgICAgIGxpZ2h0OiBjeWFuWzUwMF0sXHJcbiAgICAgICAgICAgIGNvbnRyYXN0VGV4dDogSE9VU0VfQVBQX1RFWFRfQ09MT1IsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJIb3VzZUljb24iLCJmb250U2l6ZSIsImV4dGVybmFsQXBwQ29uZmlnIiwiaWQiLCJuYW1lTG9jYWxlIiwiY29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYXRoIiwiaWNvbiIsImFwcCIsInRoZW1lIiwiX19tYWtlVGVtcGxhdGVPYmplY3QiLCJjb29rZWQiLCJyYXciLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiX19hc3NpZ24iLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwidGhpcyIsIkNvbnRhaW5lciIsInRlbXBsYXRlT2JqZWN0XzEiLCJfYSIsImlzRGFya01vZGUiLCJGb290ZXIiLCJ0ZW1wbGF0ZU9iamVjdF8yIiwiQXBwIiwicHJvcHMiLCJwYWxldHRlIiwibW9kZSIsImluamVjdEZpcnN0IiwiU3dpdGNoIiwiUm91dGUiLCJleGFjdCIsIk51aVByb3ZpZGVyIiwiUmVjb2lsUm9vdCIsIkhPVVNFX0FQUF9QUklNQVJZX0NPTE9SIiwiSE9VU0VfQVBQX1RFWFRfQ09MT1IiLCJwcmltYXJ5IiwibWFpbiIsImRhcmsiLCJsaWdodCIsImNvbnRyYXN0VGV4dCIsInNlY29uZGFyeSJdLCJzb3VyY2VSb290IjoiIn0=