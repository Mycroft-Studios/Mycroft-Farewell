"use strict";(self.webpackChunknpwd_qb_housing=self.webpackChunknpwd_qb_housing||[]).push([[333],{9440:(e,t,n)=>{n.d(t,{Ev:()=>d,kt:()=>g,LT:()=>m,Ax:()=>v,nx:()=>p,_Z:()=>f,Kq:()=>x,Ng:()=>h,xB:()=>y});var r=n(5137),a=[{id:1,label:"Signal St 2",coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}}},{id:2,label:"Didion Dr 3",coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}}}],o=[{id:1,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:2,house:"orchardville ave1",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"},{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Orchardville Ave 1",tier:2,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:3,house:"didion dr3",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Didion Dr 3",tier:6,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:-1576.087646484375,h:218.99258422851562,x:1352.541259765625,z:54.01376342773437}},{id:1345,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:16544,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:1654,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:152,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}},{id:134,house:"signal st2",keyholders:[{name:"Sam Shanks",citizenid:"WNP18329"},{name:"TEst Shanks",citizenid:"TAF18329"}],label:"Signal St 2",tier:1,coords:{cam:{h:73.05778503417969,yaw:-10,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625},enter:{h:73.05778503417969,x:158.59518432617188,z:7.23966360092163,y:-2928.146728515625}},garage:{y:0,x:0,h:0,z:0}}],i=n(5181),l=n(7405),s=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function l(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},u={houseItems:(0,r.atom)({key:"houseItem",default:(0,r.selector)({key:"defaultHouseItems",get:function(){return s(void 0,void 0,void 0,(function(){var e,t;return c(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,(0,l.Z)("npwd:qb-housing:getPlayerHouses")];case 1:return(e=n.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t=n.sent(),(0,i.Id)()?[2,o]:(console.error(t),[2,[]]);case 3:return[2]}}))}))}})}),myKeys:(0,r.atom)({key:"myKeys",default:(0,r.selector)({key:"defaultMyKeys",get:function(){return s(void 0,void 0,void 0,(function(){var e,t;return c(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,(0,l.Z)("npwd:qb-housing:getPlayerKeys")];case 1:return(e=n.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t=n.sent(),(0,i.Id)()?[2,a]:(console.error(t),[2,[]]);case 3:return[2]}}))}))}})}),selectedHouse:(0,r.atom)({key:"selectedHouse",default:null}),houseListModal:(0,r.atom)({key:"houseListModal",default:!1}),modalType:(0,r.atom)({key:"modalType",default:""})},d=function(){return(0,r.useRecoilValue)(u.houseItems)},f=function(){return(0,r.useSetRecoilState)(u.houseItems)},h=function(){return(0,r.useSetRecoilState)(u.houseListModal)},m=function(){return(0,r.useRecoilState)(u.houseListModal)},p=function(){return(0,r.useRecoilValue)(u.selectedHouse)},y=function(){return(0,r.useSetRecoilState)(u.selectedHouse)},x=function(){return(0,r.useSetRecoilState)(u.modalType)},g=function(){return(0,r.useRecoilValue)(u.modalType)},v=function(){return(0,r.useRecoilValue)(u.myKeys)}},1551:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(2950),a=n.n(r),o=n(4274),i=n(1508),l=n(2658);const s=function(){return a().createElement(i.Z,{px:2,pt:2,sx:{width:"100%",textAlign:"left",backgroundColor:o.Gy}},a().createElement(l.Z,{sx:{color:o.cX},paragraph:!0,variant:"h5"},"Properties"))}},4362:(e,t,n)=>{n.d(t,{Z:()=>x});var r=n(2950),a=n.n(r),o=n(9440),i=n(2440),l=n(799),s=n(1508),c=n(8584),u=n(1767),d=n(6867),f=n(55),h=n(594),m=n(6638),p=n(9469),y=n(3938);const x=function(e){var t=e.isDarkMode,n=(0,o.Ev)(),r=(0,o.Ng)(),x=(0,o.Kq)(),g=(0,o.xB)();return a().createElement(i.Z,{disablePadding:!0,sx:{overflow:"auto"}},n.map((function(e){return a().createElement(l.ZP,{key:e.id,divider:!0},a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"space-between",width:"100%"}},a().createElement(s.Z,{sx:{borderRadius:"5px",width:"100%",display:"flex",flexDirection:"row",gap:"20px",alignItems:"center",paddingY:"2px"}},a().createElement(m.Z,{sx:{fontSize:32,color:t?"#fff":"#000"}}),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"column",marginTop:"2px",gap:"4px"}},a().createElement(c.Z,{primaryTypographyProps:{color:t?"#fff":"#000",fontSize:"17px"}},e.label),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"12px"}},a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"5px",alignItems:"center"}},a().createElement(p.Z,{sx:{fontSize:20,color:t?"#fff":"#000"}}),a().createElement(c.Z,{primaryTypographyProps:{color:t?"#fff":"#000",fontSize:"15px"}},e.keyholders.length)),a().createElement(s.Z,{sx:{display:"flex",flexDirection:"row",gap:"5px",alignItems:"center"}},a().createElement(y.Z,{sx:{fontSize:20,color:t?"#fff":"#000"}}),e.garage&&0===e.garage.x&&0===e.garage.z||!e.garage?a().createElement(h.Z,{sx:{fontSize:16,strokeWidth:2,color:t?"#fff":"#000"}}):a().createElement(f.Z,{sx:{fontSize:16,strokeWidth:2,color:t?"#fff":"#000"}}))))),a().createElement(u.Z,{arrow:!0,title:"Key List"},a().createElement(d.Z,{onClick:function(){!function(e,t){r(!0),g(e),x("keys")}(e)}},a().createElement(p.Z,null)))))})))}},653:(e,t,n)=>{n.d(t,{Z:()=>v});var r=n(2950),a=n.n(r),o=n(6501),i=n(9440),l=n(1508),s=n(2116),c=n(6914),u=n(4390),d=n(3489);const f=function(){var e=(0,r.useState)(""),t=e[0],n=e[1],o=(0,d.h)().transferHouse,s=(0,i.nx)(),f=(0,i.Ng)();return a().createElement(a().Fragment,null,a().createElement(l.Z,{sx:{marginTop:"25px",display:"flex",justifyContent:"center",flexDirection:"column",alignItems:"center",gap:"10px"}},a().createElement(u.Z,{label:"CSN",variant:"outlined",onChange:function(e){return n(e.target.value)}}),a().createElement(c.Z,{variant:"outlined",color:"success",size:"large",sx:{width:"150px",height:"45px",marginTop:"12px"},disabled:8!==t.length,onClick:function(){o(s.house,t).then((function(){f(!1)}))}},"Confirm")))};var h=n(1733),m=n(2440),p=n(799),y=n(2658),x=n(6867);const g=function(){var e=(0,d.h)().removeKey,t=(0,i.nx)();return a().createElement(a().Fragment,null,a().createElement(m.Z,{sx:{maxHeight:"150px",overflow:"auto"},disablePadding:!0},t.keyholders.map((function(n){return a().createElement(p.ZP,{divider:!0,key:n.citizenid},a().createElement(l.Z,{sx:{width:"100%",display:"flex",justifyContent:"space-between"}},n.name.length>25?a().createElement(y.Z,null,n.name.slice(0,25)+"..."):a().createElement(y.Z,null,n.name),a().createElement(x.Z,{sx:{margin:"0px",padding:"0px"}},a().createElement(h.Z,{onClick:function(){return function(n){e(t.id,n)}(n)}}))))}))))},v=function(){var e=(0,i.LT)(),t=e[0],n=e[1],r=(0,i.nx)(),u=(0,i.kt)();return t&&r&&u?a().createElement(o.Z,{sx:{zIndex:10,position:"absolute",left:"0",right:"0",marginLeft:"auto",marginRight:"auto",top:"25%",width:"75%",minHeight:"250px"}},a().createElement(l.Z,{sx:{display:"flex",justifyContent:"center",marginTop:"10px",color:"#dedede",textTransform:"capitalize"}},u),a().createElement(s.Z,{sx:{padding:"8px"}}),"transfer"===u&&a().createElement(f,null),"keys"===u&&a().createElement(g,null),a().createElement(l.Z,{sx:{display:"flex",justifyContent:"center",alignItems:"center",alignSelf:"flex-end",pb:"10px"}},a().createElement(c.Z,{variant:"outlined",onClick:function(){n(!1)},color:"error",size:"small",sx:{width:"150px",height:"45px",marginTop:"25px"}},"Close"))):null}},352:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(2950),a=n.n(r),o=n(9440);const i=(0,n(381).Z)("div")({background:"black",opacity:"0.6",position:"absolute",top:0,left:0,right:0,bottom:0,zIndex:5}),l=(0,r.memo)((function(){var e=(0,o.LT)(),t=e[0];return e[1],t&&a().createElement(i,null)}))},9275:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(2950),a=n.n(r),o=n(4172),i=n(2004),l=n(6235),s=n(5567),c=n(3894);const u=function(){var e=(0,l.useLocation)().pathname,t=(0,r.useState)(e),n=t[0],u=t[1];return a().createElement(o.Z,{value:n,onChange:function(e,t){u(t)},showLabels:!0,sx:{width:"100%"}},a().createElement(i.Z,{label:"Houses",value:"/housing",component:l.NavLink,icon:a().createElement(s.Z,null),to:"/housing"}),a().createElement(i.Z,{label:"Keys",value:"/housing/keys",color:"secondary",component:l.NavLink,icon:a().createElement(c.Z,null),to:"/housing/keys"}))}},4582:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(2440),a=n(799),o=n(6867),i=n(700),l=n(8584),s=n(2950),c=n.n(s),u=n(9440),d=n(9308),f=n(9469),h=n(3489);const m=function(e){var t=e.isDarkMode,n=(0,u.Ax)(),s=(0,h.h)().setWaypoint;return c().createElement(r.Z,{disablePadding:!0},n.map((function(e){return c().createElement(a.ZP,{key:e.id,divider:!0,secondaryAction:c().createElement(o.Z,{edge:"end","aria-label":"waypoint",onClick:function(){return t=e.coords,void s(t);var t}},c().createElement(d.Z,null))},c().createElement(i.Z,{sx:{minWidth:"0px",marginRight:"8px"}},c().createElement(f.Z,null)),c().createElement(l.Z,{primaryTypographyProps:{color:t?"#fff":"#000"},primary:e.label}))})))}},3489:(e,t,n)=>{n.d(t,{h:()=>u});var r=n(2950),a=n(721),o=n(7405),i=n(9440),l=function(){return l=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},l.apply(this,arguments)},s=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function l(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},c=function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},u=function(){var e,t,n=(0,a.D)().addAlert,u=(e=(0,i._Z)(),t=(0,i.xB)(),{deleteLocalHouse:(0,r.useCallback)((function(t){e((function(e){return function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}([],e,!0).filter((function(e){return e.house!==t}))}))}),[]),deleteKeyHolder:(0,r.useCallback)((function(n,r){e((function(e){return e.map((function(e){return e.house===n?l(l({},e),{keyholders:e.keyholders.filter((function(e){return e.citizenid!==r}))}):e}))})),t((function(e){return e.house===n?l(l({},e),{keyholders:e.keyholders.filter((function(e){return e.citizenid!==r}))}):e}))}),[])}),d=u.deleteLocalHouse,f=u.deleteKeyHolder,h=(0,r.useCallback)((function(e){return s(void 0,void 0,void 0,(function(){return c(this,(function(t){switch(t.label){case 0:return[4,(0,o.Z)("npwd:qb-housing:setWaypoint",{coords:e.enter})];case 1:return"ok"!==t.sent().status?[2,n({message:"Failed to set waypoint",type:"error"})]:(n({message:"Successfully marked house",type:"success"}),[2])}}))}))}),[n]),m=(0,r.useCallback)((function(e,t){return s(void 0,void 0,void 0,(function(){var r,a,i;return c(this,(function(l){switch(l.label){case 0:return r=t.name.split(" "),a=r[0],i=r[1],[4,(0,o.Z)("npwd:qb-housing:removeKeyHolder",{house:e,HolderData:{houseid:e,citizenid:t.citizenid,firstName:a,lastName:i}})];case 1:return"ok"!==l.sent().status?[2,n({message:"Failed to remove key",type:"error"})]:(n({message:"Successfully removed key",type:"success"}),[2])}}))}))}),[n,f]),p=(0,r.useCallback)((function(e,t){return s(void 0,void 0,void 0,(function(){return c(this,(function(r){switch(r.label){case 0:return[4,(0,o.Z)("npwd:qb-housing:transferHouse",{house:e,citizenid:t})];case 1:return"ok"!==r.sent().status?[2,n({message:"Failed to transfer house",type:"error"})]:(d(e),n({message:"Successfully transfered house",type:"success"}),[2])}}))}))}),[n,d]);return{transferHouse:p,removeKey:m,setWaypoint:h}}},4714:(e,t,n)=>{n.d(t,{v:()=>d});var r=n(2950),a=n.n(r),o=n(9986),i=n(721),l=n(6186),s=n(2658),c=function(){return c=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},c.apply(this,arguments)};const u=(0,r.forwardRef)((function(e,t){return a().createElement(l.Z,c({sx:{zIndex:1e4},elevation:4,variant:"filled"},e,{ref:t}),a().createElement(s.Z,{sx:{maxWidth:"300px",wordWrap:"break-word",fontSize:"1.1em"}},e.children))}));var d=function(){var e,t=(0,i.D)(),n=t.alert,r=t.isOpen,l=t.handleClose;return a().createElement(o.Z,{autoHideDuration:null!==(e=null==n?void 0:n.duration)&&void 0!==e?e:3e3,open:r,sx:{display:"flex",justifyContent:"center",alignItems:"center",height:"auto",position:"absolute",bottom:75,left:"0 !important",right:"0 !important"},onClose:l},a().createElement(u,{severity:(null==n?void 0:n.type)||"info",onClose:l},(null==n?void 0:n.message)||""))}},602:(e,t,n)=>{n.d(t,{S:()=>o,Z:()=>i});var r=n(2950),a=n.n(r),o=(0,r.createContext)(null);const i=function(e){var t=e.children,n=(0,r.useState)(!1),i=n[0],l=n[1],s=(0,r.useState)(null),c=s[0],u=s[1];return a().createElement(o.Provider,{value:{alert:c,addAlert:function(e){u(e),l(!0)},handleClose:function(){l(!1)},isOpen:i}},t)}},721:(e,t,n)=>{n.d(t,{D:()=>o});var r=n(2950),a=n(602),o=function(){return(0,r.useContext)(a.S)}},7405:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(5181);const a=function(e,t,n){return a=this,o=void 0,l=function(){var a;return function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(o){switch(o.label){case 0:return a={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},(0,r.Id)()&&n?[2,n]:[4,fetch("https://".concat("npwd_qb_housing","/").concat(e),a)];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()]}}))},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{s(l.next(e))}catch(e){t(e)}}function r(e){try{s(l.throw(e))}catch(e){t(e)}}function s(t){var a;t.done?e(t.value):(a=t.value,a instanceof i?a:new i((function(e){e(a)}))).then(n,r)}s((l=l.apply(a,o||[])).next())}));var a,o,i,l}},5181:(e,t,n)=>{n.d(t,{Id:()=>r});var r=function(){return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,